{
  "name": "promise-limit-one",
  "version": "1.0.0",
  "description": "Wrap a function so if called multiple times, only one call runs simultaneously",
  "keywords": [
    "busy",
    "concurrent",
    "debounce",
    "limit",
    "one",
    "only",
    "promise",
    "throttle"
  ],
  "license": "MIT",
  "author": "Gabriel Montes <gabriel@bloq.com>",
  "files": [
    "src"
  ],
  "main": "src/index.js",
  "repository": "autonomoussoftware/promise-limit-one",
  "scripts": {
    "check:deps": "dependency-check . --no-dev",
    "check:outdated": "npm-check -i husky",
    "coverage": "nyc npm test",
    "lint": "eslint --cache .",
    "prepublishOnly": "tag-matches",
    "test": "mocha"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "check-tag-matches": "^1.0.0",
    "dependency-check": "^4.1.0",
    "eslint": "^7.12.1",
    "eslint-config-bloq": "^2.4.0",
    "eslint-config-standard": "^16.0.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsdoc": "^30.7.6",
    "eslint-plugin-mocha": "^8.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.2",
    "husky": "^4.3.0",
    "mocha": "^8.2.1",
    "npm-check": "^5.9.2",
    "nyc": "^15.1.0",
    "sinon": "^9.2.1"
  }
}
